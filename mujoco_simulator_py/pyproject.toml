[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]

[project]
name = "mujoco_simulator_py"
description = "Python interface to https://github.com/JafarAbdi/mujoco_simulator"
version = "0.0.1"
classifiers = ["Programming Language :: Python :: 3.10"]
requires-python = "==3.11"
dependencies = [
  "dm-control",
  "mujoco",
  "eclipse-zenoh>=1.0.2,<2",
  "transforms3d>=0.4.2,<0.5",
  "loop-rate-limiters",
  "rich",
  "numpy",
  "scipy",
]

[project.urls]
repository = "https://github.com/JafarAbdi/mujoco_simulator_py"

[tool.setuptools.packages.find]
include = ["mujoco_simulator_py"]

[project.scripts]

[tool.mypy]
python_version = '3.10'
no_implicit_optional = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff.lint]
exclude = ["mujoco_simulator_py/examples/*", "mujoco_simulator_py/tests/*"]
# Never enforce `E501`.
extend-select = [
  # Enabled by default
  # pyflakes
  # "F",
  # pycodestyle
  # "E",
  "W",
  # mccabe
  "C90",
  # isort
  "I",
  # pep8-naming
  "N",
  # pydocstyle
  "D",
  # pyupgrade
  "UP",
  # flake8-2020
  "YTT",
  # flake8-annotations
  # "ANN",
  # flake8-bandit
  "S",
  # flake8-blind-except
  "BLE",
  # flake8-boolean-trap
  "FBT",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-commas
  "COM",
  # flake8-comprehensions
  "C4",
  # flake8-datetimez
  "DTZ",
  # flake-debugger
  "T10",
  # flake8-django
  "DJ",
  # flake8-errmsg
  "EM",
  # flake8-executable
  "EXE",
  # lake8-implicit-str-concat
  "ISC",
  # lake8-import-conventions
  "ICN",
  # flake8-logging-format
  "G",
  # flake8-no-pep420
  "INP",
  # flake8-pie
  "PIE",
  # flake8-print
  "T20",
  # flake8-pyi
  "PYI",
  # flake8-pytest-style
  "PT",
  # flake8-quotes
  "Q",
  # flake8-raise
  "RSE",
  # flake8-return
  "RET",
  # flake8-self
  "SLF",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # flake8-type-checking
  # "TCH",
  # flake8-unused-arguments
  # "ARG",
  # flake8-use-pathlib
  "PTH",
  # eradicate
  "ERA",
  # pandas-vet
  "PD",
  # pygrep-hooks
  "PGH",
  # Pylint
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  # tryceratops
  "TRY",
  # NumPy-specific rules
  "NPY",
  # Ruff-specific rules
  "RUF",
]
# line-length = 88
ignore = ["E501"]
# G004: loggins-f-string
# INP001: implicit-namespace-package
# PLR2004: magic-value-comparison
extend-ignore = ["G004", "INP001", "PLR2004", "S101", "PLR0915"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.feature.test.dependencies]
pytest = ">=6"
pytest-cov = "*"
mypy = "*"

[tool.pixi.feature.test.tasks]
test = "python3 -m pytest --capture=no -vv"
test-coverage = "pytest --cov=mujoco_simulator_py --cov-report=xml --cov-report=term-missing"

[tool.pixi.feature.lint.dependencies]
pre-commit = "*"
prettier = "*"
taplo = "*"

[tool.pixi.feature.lint.tasks]
lint = "pre-commit run -a"

[tool.pixi.pypi-dependencies]
mujoco_simulator_py = { path = ".", editable = true }

[tool.pixi.environments]
test = ["test"]
lint = { features = ["lint"], no-default-feature = true }
